{"ast":null,"code":"var _jsxFileName = \"/home/ervin-caravali-ibarra/Downloads/frontend-v2/src/components/AIQuestionGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport ManualQuestionForm from './ManualQuestionForm';\nimport './AIQuestionGenerator.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AIQuestionGenerator = ({\n  onQuestionsGenerated,\n  onClose\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [topics, setTopics] = useState([]);\n  const [difficultyLevels, setDifficultyLevels] = useState([]);\n  const [selectedTopic, setSelectedTopic] = useState('');\n  const [selectedDifficulty, setSelectedDifficulty] = useState('medium');\n  const [questionCount, setQuestionCount] = useState(5);\n  const [useAI, setUseAI] = useState(false);\n  const [showManualForm, setShowManualForm] = useState(false);\n  const [manualCount, setManualCount] = useState(1);\n  const [manualStep, setManualStep] = useState(0);\n  const [manualQuestions, setManualQuestions] = useState([]);\n  const [manualTopic, setManualTopic] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [generatedQuestions, setGeneratedQuestions] = useState([]);\n  const [canCreateGame, setCanCreateGame] = useState(false);\n  useEffect(() => {\n    fetchTopics();\n    fetchDifficultyLevels();\n  }, []);\n  const fetchTopics = async () => {\n    try {\n      const apiBase = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      const response = await fetch(`${apiBase}/api/ai/topics`);\n      const data = await response.json();\n      if (data.success && Array.isArray(data.topics) && data.topics.length > 0) {\n        setTopics(data.topics);\n        setSelectedTopic(data.topics[0]);\n      } else {\n        setTopics([]);\n        setSelectedTopic('');\n        setError('No hay temas disponibles. Contacta al administrador.');\n      }\n    } catch (error) {\n      setTopics([]);\n      setSelectedTopic('');\n      setError('Error obteniendo temas. Verifica tu conexión.');\n      console.error('Error fetching topics:', error);\n    }\n  };\n  const fetchDifficultyLevels = async () => {\n    try {\n      const apiBase = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      const response = await fetch(`${apiBase}/api/ai/difficulty-levels`);\n      const data = await response.json();\n      if (data.success) {\n        setDifficultyLevels(data.levels);\n      }\n    } catch (error) {\n      console.error('Error fetching difficulty levels:', error);\n    }\n  };\n  const generateQuestions = async () => {\n    if (!selectedTopic) {\n      setError('Por favor selecciona un tema válido');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const apiBase = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      const token = user && user.getIdToken ? await user.getIdToken() : null;\n      const response = await fetch(`${apiBase}/api/ai/generate-questions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token ? {\n            Authorization: `Bearer ${token}`\n          } : {})\n        },\n        body: JSON.stringify({\n          topic: selectedTopic,\n          difficulty: selectedDifficulty,\n          count: questionCount,\n          useAI: useAI\n        })\n      });\n      const data = await response.json();\n      console.log('Respuesta de /api/ai/generate-questions:', data);\n      if (data.success) {\n        // Guardar preguntas en Firestore y esperar confirmación exitosa antes de crear la partida\n        const questionsWithMeta = data.questions.map(q => ({\n          // Si las opciones existen, barajarlas y actualizar el índice de la respuesta correcta de forma robusta\n          ...(() => {\n            if (!Array.isArray(q.options) || typeof q.correctAnswerIndex !== 'number') return q;\n            // Asociar cada opción con su índice original\n            const optionsWithIndex = q.options.map((opt, idx) => ({\n              opt,\n              origIdx: idx\n            }));\n            // Barajar\n            for (let i = optionsWithIndex.length - 1; i > 0; i--) {\n              const j = Math.floor(Math.random() * (i + 1));\n              [optionsWithIndex[i], optionsWithIndex[j]] = [optionsWithIndex[j], optionsWithIndex[i]];\n            }\n            // Buscar la nueva posición de la opción que era la correcta\n            const newCorrectIndex = optionsWithIndex.findIndex(o => o.origIdx === q.correctAnswerIndex);\n            return {\n              ...q,\n              options: optionsWithIndex.map(o => o.opt),\n              correctAnswerIndex: newCorrectIndex\n            };\n          })(),\n          createdBy: (user === null || user === void 0 ? void 0 : user.uid) || 'anon',\n          createdAt: Date.now(),\n          category: selectedTopic,\n          difficulty: selectedDifficulty\n        }));\n        let saveOk = false;\n        try {\n          const bulkToken = user && user.getIdToken ? await user.getIdToken() : null;\n          const response = await fetch(`${apiBase}/api/questions/bulk`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              ...(bulkToken ? {\n                Authorization: `Bearer ${bulkToken}`\n              } : {})\n            },\n            body: JSON.stringify({\n              questions: questionsWithMeta\n            })\n          });\n          const result = await response.json();\n          if (!result.success) {\n            setError(prev => (prev ? prev + ' | ' : '') + (result.error || 'Error guardando preguntas en Firestore'));\n            console.error('Error guardando preguntas en Firestore:', result.error);\n          } else {\n            saveOk = true;\n          }\n        } catch (e) {\n          setError(prev => (prev ? prev + ' | ' : '') + 'Error guardando preguntas en Firestore');\n          console.error('Error guardando preguntas en Firestore:', e);\n        }\n        if (!saveOk) {\n          setLoading(false);\n          return;\n        }\n        // Redirigir al usuario a la pantalla principal para que pueda crear la partida manualmente\n        onQuestionsGenerated(data.questions);\n        setLoading(false);\n        // No navegues ni cierres aquí, deja que el Dashboard controle el cierre\n      } else {\n        setError(data.error || 'Error generando preguntas');\n        console.error('Error generando preguntas:', data.error);\n      }\n    } catch (error) {\n      setError('Error de conexión. Intenta nuevamente.');\n      console.error('Error generating questions:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reinicia el contador de preguntas al cerrar el generador para evitar confusión\n  useEffect(() => {\n    if (!loading && !error && generatedQuestions.length === 0) {\n      setQuestionCount(5);\n    }\n  }, [loading, error, generatedQuestions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-generator-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-generator-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-generator-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83E\\uDD16 Generador de Preguntas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), showManualForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [manualStep === 0 ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            setManualStep(1);\n            setManualQuestions([]);\n            setManualTopic(selectedTopic);\n          },\n          style: {\n            marginBottom: 24\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\xBFCu\\xE1ntas preguntas manuales quieres crear?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Tema:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedTopic,\n              onChange: e => setSelectedTopic(e.target.value),\n              children: topics.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: t,\n                children: t\n              }, t, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 38\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginLeft: 16\n            },\n            children: [\"N\\xFAmero:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: 1,\n              max: 50,\n              value: manualCount,\n              onChange: e => setManualCount(Number(e.target.value)),\n              style: {\n                width: 60,\n                marginLeft: 8\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            style: {\n              marginLeft: 16\n            },\n            children: \"Comenzar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            style: {\n              marginLeft: 8\n            },\n            onClick: () => setShowManualForm(false),\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(ManualQuestionForm, {\n          topics: [manualTopic],\n          onQuestionCreated: q => {\n            const next = manualQuestions.concat([{\n              ...q,\n              category: manualTopic\n            }]);\n            if (next.length < manualCount) {\n              setManualQuestions(next);\n              setManualStep(manualStep + 1);\n            } else {\n              // Guardar todas las preguntas en lote\n              const apiBase = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n              user.getIdToken().then(token => {\n                fetch(`${apiBase}/api/questions/bulk`, {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`\n                  },\n                  body: JSON.stringify({\n                    questions: next\n                  })\n                }).then(res => res.json()).then(data => {\n                  setShowManualForm(false);\n                  setError('');\n                  setGeneratedQuestions(gqs => [...gqs, ...next]);\n                  onQuestionsGenerated && onQuestionsGenerated(next);\n                }).catch(() => {\n                  setError('Error guardando preguntas en Firestore');\n                  setShowManualForm(false);\n                });\n              });\n            }\n          },\n          onCancel: () => setShowManualForm(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }, this), manualStep > 0 && manualStep <= manualCount && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 12,\n            fontWeight: 'bold'\n          },\n          children: [\"Pregunta \", manualQuestions.length + 1, \" de \", manualCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-generator-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Tema:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedTopic,\n              onChange: e => setSelectedTopic(e.target.value),\n              className: \"form-select\",\n              disabled: topics.length === 0,\n              children: topics.length === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"No hay temas disponibles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this) : topics.map(topic => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: topic,\n                children: topic\n              }, topic, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Dificultad:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedDifficulty,\n              onChange: e => setSelectedDifficulty(e.target.value),\n              className: \"form-select\",\n              children: difficultyLevels.map(level => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: level.value,\n                children: level.label\n              }, level.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Cantidad de preguntas:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              max: \"50\",\n              value: questionCount,\n              onChange: e => setQuestionCount(parseInt(e.target.value)),\n              className: \"form-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: useAI,\n                onChange: e => setUseAI(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Usar IA avanzada (requiere API key)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ai-generator-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: onClose,\n              disabled: loading,\n              children: \"Cancelar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: generateQuestions,\n              disabled: loading || topics.length === 0,\n              children: loading ? 'Generando...' : 'Generar Preguntas IA'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline\",\n              type: \"button\",\n              onClick: () => setShowManualForm(true),\n              disabled: loading || topics.length === 0,\n              style: {\n                marginLeft: 8\n              },\n              children: \"Escribir pregunta manual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-generator-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83D\\uDCA1 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tip:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 21\n            }, this), \" Puedes generar preguntas con IA o escribirlas manualmente.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83C\\uDFAF \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Dificultad:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 21\n            }, this), \" F\\xE1cil, Medio, Dif\\xEDcil\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83D\\uDCDA \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Temas disponibles:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 21\n            }, this), \" \", topics.length, \" temas diferentes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(AIQuestionGenerator, \"2OoZJA+iaQHC6IymLjWQb0MVV1w=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = AIQuestionGenerator;\nexport default AIQuestionGenerator;\nvar _c;\n$RefreshReg$(_c, \"AIQuestionGenerator\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","useNavigate","ManualQuestionForm","jsxDEV","_jsxDEV","Fragment","_Fragment","AIQuestionGenerator","onQuestionsGenerated","onClose","_s","user","navigate","topics","setTopics","difficultyLevels","setDifficultyLevels","selectedTopic","setSelectedTopic","selectedDifficulty","setSelectedDifficulty","questionCount","setQuestionCount","useAI","setUseAI","showManualForm","setShowManualForm","manualCount","setManualCount","manualStep","setManualStep","manualQuestions","setManualQuestions","manualTopic","setManualTopic","loading","setLoading","error","setError","generatedQuestions","setGeneratedQuestions","canCreateGame","setCanCreateGame","fetchTopics","fetchDifficultyLevels","apiBase","process","env","REACT_APP_API_URL","response","fetch","data","json","success","Array","isArray","length","console","levels","generateQuestions","token","getIdToken","method","headers","Authorization","body","JSON","stringify","topic","difficulty","count","log","questionsWithMeta","questions","map","q","options","correctAnswerIndex","optionsWithIndex","opt","idx","origIdx","i","j","Math","floor","random","newCorrectIndex","findIndex","o","createdBy","uid","createdAt","Date","now","category","saveOk","bulkToken","result","prev","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","preventDefault","style","marginBottom","value","onChange","target","t","marginLeft","type","min","max","Number","width","onQuestionCreated","next","concat","then","res","gqs","catch","onCancel","marginTop","fontWeight","disabled","level","label","parseInt","checked","_c","$RefreshReg$"],"sources":["/home/ervin-caravali-ibarra/Downloads/frontend-v2/src/components/AIQuestionGenerator.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport ManualQuestionForm from './ManualQuestionForm';\nimport './AIQuestionGenerator.css';\n\nconst AIQuestionGenerator = ({ onQuestionsGenerated, onClose }) => {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [topics, setTopics] = useState([]);\n  const [difficultyLevels, setDifficultyLevels] = useState([]);\n  const [selectedTopic, setSelectedTopic] = useState('');\n  const [selectedDifficulty, setSelectedDifficulty] = useState('medium');\n  const [questionCount, setQuestionCount] = useState(5);\n  const [useAI, setUseAI] = useState(false);\n  const [showManualForm, setShowManualForm] = useState(false);\n  const [manualCount, setManualCount] = useState(1);\n  const [manualStep, setManualStep] = useState(0);\n  const [manualQuestions, setManualQuestions] = useState([]);\n  const [manualTopic, setManualTopic] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [generatedQuestions, setGeneratedQuestions] = useState([]);\n  const [canCreateGame, setCanCreateGame] = useState(false);\n\n  useEffect(() => {\n    fetchTopics();\n    fetchDifficultyLevels();\n  }, []);\n\n  const fetchTopics = async () => {\n    try {\n      const apiBase = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      const response = await fetch(`${apiBase}/api/ai/topics`);\n      const data = await response.json();\n      if (data.success && Array.isArray(data.topics) && data.topics.length > 0) {\n        setTopics(data.topics);\n        setSelectedTopic(data.topics[0]);\n      } else {\n        setTopics([]);\n        setSelectedTopic('');\n        setError('No hay temas disponibles. Contacta al administrador.');\n      }\n    } catch (error) {\n      setTopics([]);\n      setSelectedTopic('');\n      setError('Error obteniendo temas. Verifica tu conexión.');\n      console.error('Error fetching topics:', error);\n    }\n  };\n\n  const fetchDifficultyLevels = async () => {\n    try {\n      const apiBase = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      const response = await fetch(`${apiBase}/api/ai/difficulty-levels`);\n      const data = await response.json();\n      if (data.success) {\n        setDifficultyLevels(data.levels);\n      }\n    } catch (error) {\n      console.error('Error fetching difficulty levels:', error);\n    }\n  };\n\n  const generateQuestions = async () => {\n    if (!selectedTopic) {\n      setError('Por favor selecciona un tema válido');\n      return;\n    }\n\n  setLoading(true);\n  setError('');\n\n    try {\n      const apiBase = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      const token = user && user.getIdToken ? await user.getIdToken() : null;\n      const response = await fetch(`${apiBase}/api/ai/generate-questions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token ? { Authorization: `Bearer ${token}` } : {})\n        },\n        body: JSON.stringify({\n          topic: selectedTopic,\n          difficulty: selectedDifficulty,\n          count: questionCount,\n          useAI: useAI\n        }),\n      });\n\n      const data = await response.json();\n      console.log('Respuesta de /api/ai/generate-questions:', data);\n      if (data.success) {\n        // Guardar preguntas en Firestore y esperar confirmación exitosa antes de crear la partida\n        const questionsWithMeta = data.questions.map(q => ({\n          // Si las opciones existen, barajarlas y actualizar el índice de la respuesta correcta de forma robusta\n          ...(() => {\n            if (!Array.isArray(q.options) || typeof q.correctAnswerIndex !== 'number') return q;\n            // Asociar cada opción con su índice original\n            const optionsWithIndex = q.options.map((opt, idx) => ({ opt, origIdx: idx }));\n            // Barajar\n            for (let i = optionsWithIndex.length - 1; i > 0; i--) {\n              const j = Math.floor(Math.random() * (i + 1));\n              [optionsWithIndex[i], optionsWithIndex[j]] = [optionsWithIndex[j], optionsWithIndex[i]];\n            }\n            // Buscar la nueva posición de la opción que era la correcta\n            const newCorrectIndex = optionsWithIndex.findIndex(o => o.origIdx === q.correctAnswerIndex);\n            return {\n              ...q,\n              options: optionsWithIndex.map(o => o.opt),\n              correctAnswerIndex: newCorrectIndex\n            };\n          })(),\n          createdBy: user?.uid || 'anon',\n          createdAt: Date.now(),\n          category: selectedTopic,\n          difficulty: selectedDifficulty\n        }));\n        let saveOk = false;\n        try {\n          const bulkToken = user && user.getIdToken ? await user.getIdToken() : null;\n          const response = await fetch(`${apiBase}/api/questions/bulk`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              ...(bulkToken ? { Authorization: `Bearer ${bulkToken}` } : {})\n            },\n            body: JSON.stringify({ questions: questionsWithMeta })\n          });\n          const result = await response.json();\n          if (!result.success) {\n            setError((prev) => (prev ? prev + ' | ' : '') + (result.error || 'Error guardando preguntas en Firestore'));\n            console.error('Error guardando preguntas en Firestore:', result.error);\n          } else {\n            saveOk = true;\n          }\n        } catch (e) {\n          setError((prev) => (prev ? prev + ' | ' : '') + 'Error guardando preguntas en Firestore');\n          console.error('Error guardando preguntas en Firestore:', e);\n        }\n        if (!saveOk) {\n          setLoading(false);\n          return;\n        }\n        // Redirigir al usuario a la pantalla principal para que pueda crear la partida manualmente\n  onQuestionsGenerated(data.questions);\n  setLoading(false);\n  // No navegues ni cierres aquí, deja que el Dashboard controle el cierre\n      } else {\n        setError(data.error || 'Error generando preguntas');\n        console.error('Error generando preguntas:', data.error);\n      }\n    } catch (error) {\n      setError('Error de conexión. Intenta nuevamente.');\n      console.error('Error generating questions:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reinicia el contador de preguntas al cerrar el generador para evitar confusión\n  useEffect(() => {\n    if (!loading && !error && generatedQuestions.length === 0) {\n      setQuestionCount(5);\n    }\n  }, [loading, error, generatedQuestions]);\n\n  return (\n    <div className=\"ai-generator-overlay\">\n      <div className=\"ai-generator-modal\">\n        <div className=\"ai-generator-header\">\n          <h2>🤖 Generador de Preguntas</h2>\n          <button className=\"close-btn\" onClick={onClose}>×</button>\n        </div>\n        {showManualForm ? (\n          <div>\n            {manualStep === 0 ? (\n              <form onSubmit={e => { e.preventDefault(); setManualStep(1); setManualQuestions([]); setManualTopic(selectedTopic); }} style={{ marginBottom: 24 }}>\n                <h3>¿Cuántas preguntas manuales quieres crear?</h3>\n                <label>\n                  Tema:\n                  <select value={selectedTopic} onChange={e => setSelectedTopic(e.target.value)}>\n                    {topics.map(t => <option key={t} value={t}>{t}</option>)}\n                  </select>\n                </label>\n                <label style={{ marginLeft: 16 }}>\n                  Número:\n                  <input type=\"number\" min={1} max={50} value={manualCount} onChange={e => setManualCount(Number(e.target.value))} style={{ width: 60, marginLeft: 8 }} />\n                </label>\n                <button type=\"submit\" className=\"btn btn-primary\" style={{ marginLeft: 16 }}>Comenzar</button>\n                <button type=\"button\" className=\"btn btn-secondary\" style={{ marginLeft: 8 }} onClick={() => setShowManualForm(false)}>Cancelar</button>\n              </form>\n            ) : (\n              <ManualQuestionForm\n                topics={[manualTopic]}\n                onQuestionCreated={q => {\n                  const next = manualQuestions.concat([{ ...q, category: manualTopic }]);\n                  if (next.length < manualCount) {\n                    setManualQuestions(next);\n                    setManualStep(manualStep + 1);\n                  } else {\n                    // Guardar todas las preguntas en lote\n                    const apiBase = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n                    user.getIdToken().then(token => {\n                      fetch(`${apiBase}/api/questions/bulk`, {\n                        method: 'POST',\n                        headers: {\n                          'Content-Type': 'application/json',\n                          Authorization: `Bearer ${token}`\n                        },\n                        body: JSON.stringify({ questions: next })\n                      })\n                        .then(res => res.json())\n                        .then(data => {\n                          setShowManualForm(false);\n                          setError('');\n                          setGeneratedQuestions(gqs => [...gqs, ...next]);\n                          onQuestionsGenerated && onQuestionsGenerated(next);\n                        })\n                        .catch(() => {\n                          setError('Error guardando preguntas en Firestore');\n                          setShowManualForm(false);\n                        });\n                    });\n                  }\n                }}\n                onCancel={() => setShowManualForm(false)}\n              />\n            )}\n            {manualStep > 0 && manualStep <= manualCount && (\n              <div style={{ marginTop: 12, fontWeight: 'bold' }}>Pregunta {manualQuestions.length + 1} de {manualCount}</div>\n            )}\n          </div>\n        ) : (\n          <>\n            <div className=\"ai-generator-content\">\n              <div className=\"form-group\">\n                <label>Tema:</label>\n                <select \n                  value={selectedTopic} \n                  onChange={(e) => setSelectedTopic(e.target.value)}\n                  className=\"form-select\"\n                  disabled={topics.length === 0}\n                >\n                  {topics.length === 0 ? (\n                    <option value=\"\">No hay temas disponibles</option>\n                  ) : (\n                    topics.map(topic => (\n                      <option key={topic} value={topic}>{topic}</option>\n                    ))\n                  )}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label>Dificultad:</label>\n                <select \n                  value={selectedDifficulty} \n                  onChange={(e) => setSelectedDifficulty(e.target.value)}\n                  className=\"form-select\"\n                >\n                  {difficultyLevels.map(level => (\n                    <option key={level.value} value={level.value}>\n                      {level.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label>Cantidad de preguntas:</label>\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"50\"\n                  value={questionCount}\n                  onChange={(e) => setQuestionCount(parseInt(e.target.value))}\n                  className=\"form-input\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={useAI}\n                    onChange={(e) => setUseAI(e.target.checked)}\n                  />\n                  <span>Usar IA avanzada (requiere API key)</span>\n                </label>\n              </div>\n              {error && (\n                <div className=\"error-message\">\n                  {error}\n                </div>\n              )}\n              <div className=\"ai-generator-actions\">\n                <button \n                  className=\"btn btn-secondary\" \n                  onClick={onClose}\n                  disabled={loading}\n                >\n                  Cancelar\n                </button>\n                <button \n                  className=\"btn btn-primary\" \n                  onClick={generateQuestions}\n                  disabled={loading || topics.length === 0}\n                >\n                  {loading ? 'Generando...' : 'Generar Preguntas IA'}\n                </button>\n                <button\n                  className=\"btn btn-outline\"\n                  type=\"button\"\n                  onClick={() => setShowManualForm(true)}\n                  disabled={loading || topics.length === 0}\n                  style={{ marginLeft: 8 }}\n                >\n                  Escribir pregunta manual\n                </button>\n              </div>\n            </div>\n            <div className=\"ai-generator-info\">\n              <p>💡 <strong>Tip:</strong> Puedes generar preguntas con IA o escribirlas manualmente.</p>\n              <p>🎯 <strong>Dificultad:</strong> Fácil, Medio, Difícil</p>\n              <p>📚 <strong>Temas disponibles:</strong> {topics.length} temas diferentes</p>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default AIQuestionGenerator;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}