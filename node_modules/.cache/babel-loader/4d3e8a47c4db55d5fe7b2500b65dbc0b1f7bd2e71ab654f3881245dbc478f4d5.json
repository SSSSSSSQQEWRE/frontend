{"ast":null,"code":"var _jsxFileName = \"/home/ervin-caravali-ibarra/Downloads/frontend-v2/src/pages/GamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../AuthContext';\nimport { socket } from '../services/socket';\nimport Question from '../components/Question';\nimport Timer from '../components/Timer';\nimport Ranking from '../components/Ranking';\nimport './GamePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GamePage() {\n  _s();\n  const [questionTimeout, setQuestionTimeout] = useState(false);\n  const {\n    gameId\n  } = useParams();\n  const {\n    user\n  } = useAuth();\n  const [question, setQuestion] = useState(null);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [totalQuestions, setTotalQuestions] = useState(0);\n  const [selected, setSelected] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const [result, setResult] = useState(null);\n  const [timerKey, setTimerKey] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Solicitar la primera pregunta al conectar\n    if (user && gameId) {\n      socket.emit('requestQuestion', {\n        gameId\n      });\n      console.log('[GamePage] Emitiendo requestQuestion:', {\n        gameId\n      });\n    }\n    // Si no llega pregunta en 5 segundos, mostrar error\n    const timeout = setTimeout(() => {\n      if (!question) setQuestionTimeout(true);\n    }, 5000);\n    if (!user) return;\n    if (!socket.connected) {\n      console.log('[GamePage] Intentando conectar socket...');\n      socket.connect();\n    }\n    // Listeners nombrados para evitar duplicados\n    function onConnect() {\n      console.log('[GamePage] Socket conectado:', socket.id);\n    }\n    function onNewQuestion({\n      question,\n      index\n    }) {\n      console.log('[GamePage] Evento newQuestion recibido:', question);\n      // Asegurarse de que las opciones no se barajen ni modifiquen\n      // y que el índice de la respuesta correcta corresponda al array recibido\n      if (!Array.isArray(question.options)) {\n        question.options = [];\n      }\n      setQuestion({\n        ...question,\n        options: [...question.options] // Copia directa, sin barajar\n      });\n      setQuestionIndex(index);\n      setSelected(null);\n      setShowResult(false);\n      setTimeLeft(10);\n      setTimerKey(prev => prev + 1);\n    }\n    function onAnswerResult({\n      correctAnswerIndex,\n      explanation,\n      players\n    }) {\n      console.log('[GamePage] Evento answerResult recibido:', {\n        correctAnswerIndex,\n        explanation,\n        players\n      });\n      setShowResult(true);\n      setResult({\n        correctAnswerIndex,\n        explanation\n      });\n      setPlayers(players);\n    }\n    function onGameFinished({\n      players\n    }) {\n      console.log('[GamePage] Evento gameFinished recibido:', players);\n      navigate(`/summary/${gameId}`, {\n        state: {\n          players\n        }\n      });\n    }\n    function onGameStarted({\n      questionsCount\n    }) {\n      console.log('[GamePage] Evento gameStarted recibido:', questionsCount);\n      setTotalQuestions(questionsCount);\n    }\n    socket.on('connect', onConnect);\n    socket.on('newQuestion', onNewQuestion);\n    socket.on('answerResult', onAnswerResult);\n    socket.on('gameFinished', onGameFinished);\n    socket.on('gameStarted', onGameStarted);\n    return () => {\n      socket.off('connect', onConnect);\n      socket.off('newQuestion', onNewQuestion);\n      socket.off('answerResult', onAnswerResult);\n      socket.off('gameFinished', onGameFinished);\n      socket.off('gameStarted', onGameStarted);\n    };\n  }, [user, gameId, navigate]);\n  const handleSelect = useCallback(idx => {\n    if (selected !== null) return; // Prevent multiple selections\n    setSelected(idx);\n    // Enviar también el valor de la opción seleccionada\n    const answerValue = question && Array.isArray(question.options) ? question.options[idx] : undefined;\n    socket.emit('submitAnswer', {\n      gameId,\n      uid: user.uid,\n      answerIndex: idx,\n      answerValue\n    });\n  }, [gameId, user, selected]);\n  const handleTimerEnd = useCallback(() => {\n    if (selected === null) {\n      socket.emit('submitAnswer', {\n        gameId,\n        uid: user.uid,\n        answerIndex: null,\n        answerValue: null\n      });\n    }\n  }, [gameId, user, selected]);\n  const getOptionColor = index => {\n    if (!showResult) {\n      return selected === index ? 'selected' : '';\n    }\n    if (index === result.correctAnswerIndex) {\n      return 'correct';\n    }\n    if (selected === index && index !== result.correctAnswerIndex) {\n      return 'incorrect';\n    }\n    return '';\n  };\n  const getPlayerRank = () => {\n    const sortedPlayers = [...players].sort((a, b) => b.score - a.score);\n    const playerIndex = sortedPlayers.findIndex(p => p.uid === user.uid);\n    return playerIndex + 1;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83C\\uDFAF Quiz Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"question-counter\",\n            children: [\"Question \", questionIndex + 1, \" of \", totalQuestions || '?']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${(questionIndex + 1) / (totalQuestions || 1) * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-rank\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"rank-number\",\n          children: [\"#\", getPlayerRank()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"rank-label\",\n          children: \"Your Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"game-main\",\n      children: [question && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-header\",\n          children: [/*#__PURE__*/_jsxDEV(Question, {\n            question: question.question,\n            options: question.options,\n            onSelect: handleSelect,\n            selected: selected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), !showResult && /*#__PURE__*/_jsxDEV(Timer, {\n            seconds: 10,\n            onEnd: handleTimerEnd,\n            onTick: setTimeLeft\n          }, timerKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), showResult && result && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\u2705 Answer Revealed!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"correct-answer\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Correct Answer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this), \" \", question.options[result.correctAnswerIndex]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this), result.explanation && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"explanation\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Explanation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 21\n            }, this), \" \", result.explanation]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), !question && !questionTimeout && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waiting-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Waiting for next question...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), !question && questionTimeout && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waiting-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red',\n            fontWeight: 'bold'\n          },\n          children: \"No se encontraron preguntas para este tema. Verifica que hayas generado preguntas y que el tema coincida exactamente.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"game-sidebar\",\n      children: /*#__PURE__*/_jsxDEV(Ranking, {\n        players: players\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(GamePage, \"rbbTJx/5XADUPrf5nrz4iBa+3LE=\", false, function () {\n  return [useParams, useAuth, useNavigate];\n});\n_c = GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useParams","useNavigate","useAuth","socket","Question","Timer","Ranking","jsxDEV","_jsxDEV","GamePage","_s","questionTimeout","setQuestionTimeout","gameId","user","question","setQuestion","questionIndex","setQuestionIndex","totalQuestions","setTotalQuestions","selected","setSelected","players","setPlayers","showResult","setShowResult","result","setResult","timerKey","setTimerKey","timeLeft","setTimeLeft","navigate","emit","console","log","timeout","setTimeout","connected","connect","onConnect","id","onNewQuestion","index","Array","isArray","options","prev","onAnswerResult","correctAnswerIndex","explanation","onGameFinished","state","onGameStarted","questionsCount","on","off","handleSelect","idx","answerValue","undefined","uid","answerIndex","handleTimerEnd","getOptionColor","getPlayerRank","sortedPlayers","sort","a","b","score","playerIndex","findIndex","p","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","onSelect","seconds","onEnd","onTick","color","fontWeight","_c","$RefreshReg$"],"sources":["/home/ervin-caravali-ibarra/Downloads/frontend-v2/src/pages/GamePage.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../AuthContext';\nimport { socket } from '../services/socket';\nimport Question from '../components/Question';\nimport Timer from '../components/Timer';\nimport Ranking from '../components/Ranking';\nimport './GamePage.css';\n\nexport default function GamePage() {\n  const [questionTimeout, setQuestionTimeout] = useState(false);\n  const { gameId } = useParams();\n  const { user } = useAuth();\n  const [question, setQuestion] = useState(null);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [totalQuestions, setTotalQuestions] = useState(0);\n  const [selected, setSelected] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const [result, setResult] = useState(null);\n  const [timerKey, setTimerKey] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Solicitar la primera pregunta al conectar\n    if (user && gameId) {\n      socket.emit('requestQuestion', { gameId });\n      console.log('[GamePage] Emitiendo requestQuestion:', { gameId });\n    }\n    // Si no llega pregunta en 5 segundos, mostrar error\n    const timeout = setTimeout(() => {\n      if (!question) setQuestionTimeout(true);\n    }, 5000);\n\n    if (!user) return;\n    if (!socket.connected) {\n      console.log('[GamePage] Intentando conectar socket...');\n      socket.connect();\n    }\n    // Listeners nombrados para evitar duplicados\n    function onConnect() {\n      console.log('[GamePage] Socket conectado:', socket.id);\n    }\n    function onNewQuestion({ question, index }) {\n      console.log('[GamePage] Evento newQuestion recibido:', question);\n        // Asegurarse de que las opciones no se barajen ni modifiquen\n        // y que el índice de la respuesta correcta corresponda al array recibido\n        if (!Array.isArray(question.options)) {\n          question.options = [];\n        }\n        setQuestion({\n          ...question,\n          options: [...question.options], // Copia directa, sin barajar\n        });\n        setQuestionIndex(index);\n        setSelected(null);\n        setShowResult(false);\n        setTimeLeft(10);\n        setTimerKey(prev => prev + 1);\n    }\n    function onAnswerResult({ correctAnswerIndex, explanation, players }) {\n      console.log('[GamePage] Evento answerResult recibido:', { correctAnswerIndex, explanation, players });\n      setShowResult(true);\n      setResult({ correctAnswerIndex, explanation });\n      setPlayers(players);\n    }\n    function onGameFinished({ players }) {\n      console.log('[GamePage] Evento gameFinished recibido:', players);\n      navigate(`/summary/${gameId}`, { state: { players } });\n    }\n    function onGameStarted({ questionsCount }) {\n      console.log('[GamePage] Evento gameStarted recibido:', questionsCount);\n      setTotalQuestions(questionsCount);\n    }\n\n    socket.on('connect', onConnect);\n    socket.on('newQuestion', onNewQuestion);\n    socket.on('answerResult', onAnswerResult);\n    socket.on('gameFinished', onGameFinished);\n    socket.on('gameStarted', onGameStarted);\n\n    return () => {\n      socket.off('connect', onConnect);\n      socket.off('newQuestion', onNewQuestion);\n      socket.off('answerResult', onAnswerResult);\n      socket.off('gameFinished', onGameFinished);\n      socket.off('gameStarted', onGameStarted);\n    };\n  }, [user, gameId, navigate]);\n\n  const handleSelect = useCallback((idx) => {\n  if (selected !== null) return; // Prevent multiple selections\n  setSelected(idx);\n  // Enviar también el valor de la opción seleccionada\n  const answerValue = question && Array.isArray(question.options) ? question.options[idx] : undefined;\n  socket.emit('submitAnswer', { gameId, uid: user.uid, answerIndex: idx, answerValue });\n  }, [gameId, user, selected]);\n\n  const handleTimerEnd = useCallback(() => {\n    if (selected === null) {\n      socket.emit('submitAnswer', { gameId, uid: user.uid, answerIndex: null, answerValue: null });\n    }\n  }, [gameId, user, selected]);\n\n  const getOptionColor = (index) => {\n    if (!showResult) {\n      return selected === index ? 'selected' : '';\n    }\n    \n    if (index === result.correctAnswerIndex) {\n      return 'correct';\n    }\n    \n    if (selected === index && index !== result.correctAnswerIndex) {\n      return 'incorrect';\n    }\n    \n    return '';\n  };\n\n  const getPlayerRank = () => {\n    const sortedPlayers = [...players].sort((a, b) => b.score - a.score);\n    const playerIndex = sortedPlayers.findIndex(p => p.uid === user.uid);\n    return playerIndex + 1;\n  };\n\n  return (\n    <div className=\"game-page\">\n      <header className=\"game-header\">\n        <div className=\"game-info\">\n          <h2>🎯 Quiz Game</h2>\n          <div className=\"progress-info\">\n            <span className=\"question-counter\">\n              Question {questionIndex + 1} of {totalQuestions || '?'}\n            </span>\n            <div className=\"progress-bar\">\n              <div \n                className=\"progress-fill\" \n                style={{ width: `${((questionIndex + 1) / (totalQuestions || 1)) * 100}%` }}\n              ></div>\n            </div>\n          </div>\n        </div>\n        <div className=\"player-rank\">\n          <span className=\"rank-number\">#{getPlayerRank()}</span>\n          <span className=\"rank-label\">Your Rank</span>\n        </div>\n      </header>\n\n      <main className=\"game-main\">\n        {question && (\n          <div className=\"question-container\">\n            <div className=\"question-header\">\n              <Question\n                question={question.question}\n                options={question.options}\n                onSelect={handleSelect}\n                selected={selected}\n              />\n              {!showResult && (\n                <Timer\n                  key={timerKey}\n                  seconds={10}\n                  onEnd={handleTimerEnd}\n                  onTick={setTimeLeft}\n                />\n              )}\n            </div>\n            {showResult && result && (\n              <div className=\"result-container\">\n                <div className=\"result-header\">\n                  <h4>✅ Answer Revealed!</h4>\n                </div>\n                <div className=\"correct-answer\">\n                  <strong>Correct Answer:</strong> {question.options[result.correctAnswerIndex]}\n                </div>\n                {result.explanation && (\n                  <div className=\"explanation\">\n                    <strong>Explanation:</strong> {result.explanation}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n\n        {!question && !questionTimeout && (\n          <div className=\"waiting-container\">\n            <div className=\"loading-spinner\"></div>\n            <p>Waiting for next question...</p>\n          </div>\n        )}\n        {!question && questionTimeout && (\n          <div className=\"waiting-container\">\n            <div className=\"loading-spinner\"></div>\n            <p style={{color: 'red', fontWeight: 'bold'}}>No se encontraron preguntas para este tema. Verifica que hayas generado preguntas y que el tema coincida exactamente.</p>\n          </div>\n        )}\n      </main>\n\n      <aside className=\"game-sidebar\">\n        <Ranking players={players} />\n      </aside>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}